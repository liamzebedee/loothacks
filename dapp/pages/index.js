import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import styles from "../styles/Home.module.css";
import { useRouter } from "next/router";

import { atom, useRecoilState } from 'recoil'
import { useEffect } from "react";
import { useWeb3 } from '../components/ethereum'
import { Spinner } from "@chakra-ui/react"
import { ethers } from 'ethers'
import { BigNumber } from 'ethers'
import { formatFixed } from '@ethersproject/bignumber'
import w3utils from 'web3-utils'
import * as config from '../lib/config'
import { priceToString } from '../lib/utils'

const sugardao = require('../../')

const pricesState = atom({
  key: 'prices',
  default: null,
});



export default function Home() {
  const router = useRouter();
  const { activate, active, provider } = useWeb3()
  const [prices, setPrices] = useRecoilState(pricesState)

  useEffect(async () => {
    if(active) {
      const {
        SugarOracle
      } = sugardao.getContracts({ network: config.network, signerOrProvider: provider });

      const prices = await SugarOracle.getPrices()
      setPrices(prices)

      provider.on('block', async blockNum => {
        const prices = await SugarOracle.getPrices()
        console.log(prices.map(priceToString))
        setPrices(prices)
      })
    } else {
      activate({ supportedChainIds: [31337] })
    }
  }, [active, setPrices])

  return (
    <div className={styles.container}>
      <Head>
        <title>SugarDAO</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">SugarDAO</a>
        </h1>

        <p className={styles.description}>
          Become a daobetic, get exposure to $SUGAR today.
          <Link passHref href="/loans/open">
            <a className={styles.button}>Open a loan</a>
          </Link>
        </p>

        <span>
          SUGAR = {!prices ? <Spinner size="xs" /> : <>${priceToString(prices[0])}</>}
          {/* {price ? priceToString(price) : ''} */}
        </span>

        <div className={styles.grid}>
          <a
            href="#"
            onClick={() => router.push("/sugar-feed")}
            className={styles.card}
          >
            <h2>SugarFeed &rarr;</h2>
            <p>Check the real-time $SUGAR feed.</p>
          </a>

          <a
            href="https://docs.google.com/document/d/11tIiI8U5u8_ZFkdbx9mxnlcnMZbJNQdUDmBmky8eTIo/edit?usp=sharing"
            className={styles.card}
          >
            <h2>Learn &rarr;</h2>
            <p>Read the whitepaper!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/master/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://ethereum.org"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by Ethereum
          <span className={styles.logo}>
            {/* <Image src="https://ethereum.org/static/8ea7775026f258b32e5027fe2408c49f/ed396/ethereum-logo-landscape-black.png" alt="Vercel Logo" layout='fill' height={32} /> */}
          </span>
        </a>
      </footer>
    </div>
  );
}
